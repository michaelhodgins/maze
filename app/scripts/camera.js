// Generated by CoffeeScript 1.7.1
var Camera;

Camera = (function() {
  function Camera(x, y, angle) {
    this.x = x != null ? x : 0;
    this.y = y != null ? y : 600;
    this.angle = angle != null ? angle : 0;
    this.fov = 60;
    this.maxDistance = 1500;
  }

  Camera.prototype.project = function(map, canvas, context) {
    var angle, angleIncrement, distance, distanceFromScreen, sliceHeight, x, y, _i, _ref, _results;
    angle = this.angle - (this.fov / 2);
    angleIncrement = this.fov / canvas.width;
    distanceFromScreen = canvas.width / 2 / Math.tan(this.fov / 2 * DEG);
    _results = [];
    for (x = _i = 0, _ref = canvas.width; 0 <= _ref ? _i < _ref : _i > _ref; x = 0 <= _ref ? ++_i : --_i) {
      distance = this.castRay(map, angle);
      sliceHeight = map.wallHeight / distance * distanceFromScreen;
      y = canvas.height / 2 - sliceHeight / 2;
      context.fillStyle = '#F0F';
      context.fillRect(x, y, 1, sliceHeight);
      context.fillStyle = '#000';
      context.globalAlpha = distance / this.maxDistance;
      context.fillRect(x, y, 1, sliceHeight);
      _results.push(angle += angleIncrement);
    }
    return _results;
  };

  Camera.prototype.castRay = function(map, angle) {
    var hit, length, x, xIncrement, y, yIncrement, _i, _ref;
    x = this.x;
    y = this.y;
    xIncrement = Math.cos(angle * DEG);
    yIncrement = Math.sin(angle * DEG);
    for (length = _i = 0, _ref = this.maxDistance; 0 <= _ref ? _i < _ref : _i > _ref; length = 0 <= _ref ? ++_i : --_i) {
      x += xIncrement;
      y += yIncrement;
      hit = map.get(x, y);
      if (hit) {
        return length;
      }
    }
  };

  return Camera;

})();
